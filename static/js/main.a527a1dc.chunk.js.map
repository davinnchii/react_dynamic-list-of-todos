{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterParams","TodoList","todos","selectedTodo","selectUser","selectTodo","setModal","className","map","todo","id","completed","classNames","title","type","onClick","userId","todoId","status","TodoFilter","filterParam","onFilterChange","onSearch","onReset","defaultValue","selectFilter","onChange","value","All","Active","Completed","placeholder","query","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoModal","onHide","useState","isLoading","setIsLoading","user","setUser","useEffect","getUser","finally","href","email","name","App","setTodos","setFilterParam","setUserId","setSelectedTodo","isModalActive","setIsModalActive","filter","toLowerCase","includes","event","prev","target","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a527a1dc.chunk.js","sourcesContent":["import React from 'react';\n\nexport enum FilterParams {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\ninterface Filter {\n  selectFilter: string,\n  query: string,\n}\n\ntype Props = {\n  filterParam: Filter,\n  onFilterChange: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  onSearch: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  onReset: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterParam,\n  onFilterChange,\n  onSearch,\n  onReset,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            defaultValue={filterParam.selectFilter}\n            onChange={onFilterChange}\n          >\n            <option value={FilterParams.All}>All</option>\n            <option value={FilterParams.Active}>Active</option>\n            <option value={FilterParams.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filterParam.query}\n          onChange={onSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {filterParam.query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onReset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  selectedTodo: Todo | null,\n  selectUser: (userId: number) => void,\n  selectTodo: (todoId: number) => void,\n  setModal: (status: boolean) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  selectUser,\n  selectTodo,\n  setModal,\n}) => {\n  const handleToggleModal = (\n    userId: number,\n    todoId: number,\n    status: boolean,\n  ) => {\n    selectUser(userId);\n    selectTodo(todoId);\n    setModal(status);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleToggleModal(todo.userId, todo.id, true)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': selectedTodo?.id !== todo.id,\n                    'fa-eye-slash': selectedTodo?.id === todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  userId: number,\n  todo: Todo | null\n  onHide: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  todo,\n  onHide,\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState({} as User);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUser)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onHide}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { FilterParams, TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\n// function filterTodos(todos: Todo[], filterParams: FilterParamsType) {\n//   let todosCopy = [...todos];\n\n//   if (filterParams.selectFilter === FilterParams.Active && !filterParams.query) {\n//     todosCopy = todosCopy.filter((todoTask) => !todoTask.completed);\n//   }\n\n//   if (filterParams.selectFilter === FilterParams.Completed && !filterParams.query) {\n//     todosCopy = todosCopy.filter((todoTask) => todoTask.completed);\n//   }\n\n//   // if (filterParams.selectFilter === FilterParams.All && !filterParams.query) {\n//   //   todosCopy = getTodos().then();\n//   // }\n\n//   if (filterParams.query) {\n//     todosCopy = todosCopy.filter(({ title }) => title.toLowerCase()\n//       .includes(filterParams.query.toLowerCase()));\n//   }\n\n//   return todosCopy;\n// }\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState([] as Todo[]);\n\n  const [filterParam, setFilterParam] = useState({\n    selectFilter: 'all',\n    query: '',\n  });\n\n  const [userId, setUserId] = useState(0);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>({} as Todo);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isModalActive, setIsModalActive] = useState(false);\n\n  useEffect(() => {\n    getTodos().then(setTodos).finally(() => setIsLoading(false));\n  }, []);\n\n  const handleChangeFilterParam = (event: ChangeEvent<HTMLSelectElement>) => {\n    setFilterParam((prev) => ({ ...prev, selectFilter: event.target.value }));\n  };\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterParam((prev) => ({ ...prev, query: event.target.value }));\n  };\n\n  const handleResetQuery = () => {\n    setFilterParam((prev) => ({ ...prev, query: '' }));\n  };\n\n  const handleSelectUser = (id: number) => {\n    setUserId(id);\n  };\n\n  const handleSelectTodo = (todoId: number) => {\n    setSelectedTodo(todos.find(({ id }) => id === todoId) || null);\n  };\n\n  const handleHideModal = () => {\n    setSelectedTodo(null);\n    setUserId(0);\n    setIsModalActive(false);\n  };\n\n  useEffect(() => {\n    if (filterParam.selectFilter === FilterParams.All) {\n      getTodos().then(todo => {\n        setTodos(todo.filter(({ title }) => title.toLowerCase().includes(filterParam.query.toLowerCase())));\n      });\n    }\n\n    if (filterParam.selectFilter === FilterParams.Active) {\n      getTodos().then(todo => {\n        setTodos(todo.filter(({ completed, title }) => {\n          return !completed\n            && title.toLowerCase().includes(filterParam.query.toLowerCase());\n        }));\n      });\n    }\n\n    if (filterParam.selectFilter === FilterParams.Completed) {\n      getTodos().then(todo => {\n        setTodos(todo.filter(({ completed, title }) => {\n          return completed\n            && title.toLowerCase().includes(filterParam.query.toLowerCase());\n        }));\n      });\n    }\n  }, [filterParam]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterParam={filterParam}\n                onFilterChange={handleChangeFilterParam}\n                onSearch={handleSearch}\n                onReset={handleResetQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={todos}\n                  selectedTodo={selectedTodo}\n                  selectTodo={handleSelectTodo}\n                  selectUser={handleSelectUser}\n                  setModal={setIsModalActive}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isModalActive && (\n        <TodoModal\n          todo={selectedTodo}\n          userId={userId}\n          onHide={handleHideModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}