{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoTask/TodoTask.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterParams","TodoTask","todo","handleToggleModal","selectedTodo","className","id","completed","classNames","title","type","onClick","userId","TodoList","todos","selectUser","selectTodo","setModal","todoId","status","map","TodoFilter","filterParam","onFilterChange","onSearch","onReset","defaultValue","selectFilter","onChange","Object","keys","key","value","placeholder","query","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoModal","onHide","useState","isLoading","setIsLoading","user","setUser","useEffect","getUser","finally","href","email","name","App","setTodos","setFilterParam","setUserId","setSelectedTodo","isModalActive","setIsModalActive","All","filter","toLowerCase","includes","Active","Completed","event","prev","target","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.241ef243.chunk.js","sourcesContent":["import React from 'react';\n\nexport enum FilterParams {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n\ninterface Filter {\n  selectFilter: string,\n  query: string,\n}\n\ntype Props = {\n  filterParam: Filter,\n  onFilterChange: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  onSearch: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  onReset: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterParam,\n  onFilterChange,\n  onSearch,\n  onReset,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            defaultValue={filterParam.selectFilter}\n            onChange={onFilterChange}\n          >\n            {(Object.keys(FilterParams) as Array<keyof typeof FilterParams>)\n              .map((key) => (\n                <option value={FilterParams[key]}>{FilterParams[key]}</option>\n              ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filterParam.query}\n          onChange={onSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {filterParam.query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onReset}\n              aria-label=\"clearSearchButton\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  handleToggleModal: (\n    userId: number,\n    todoId: number,\n    status: boolean,\n  ) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoTask: React.FC<Props> = ({\n  todo,\n  handleToggleModal,\n  selectedTodo,\n}) => {\n  return (\n    <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !todo.completed,\n          'has-text-success': todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => handleToggleModal(todo.userId, todo.id, true)}\n        >\n          <span className=\"icon\">\n            <i className={classNames('far', {\n              'fa-eye': selectedTodo?.id !== todo.id,\n              'fa-eye-slash': selectedTodo?.id === todo.id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoTask } from '../TodoTask';\n\ntype Props = {\n  todos: Todo[] | null,\n  selectedTodo: Todo | null,\n  selectUser: (userId: number) => void,\n  selectTodo: (todoId: number) => void,\n  setModal: (status: boolean) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  selectUser,\n  selectTodo,\n  setModal,\n}) => {\n  const handleToggleModal = (\n    userId: number,\n    todoId: number,\n    status: boolean,\n  ) => {\n    selectUser(userId);\n    selectTodo(todoId);\n    setModal(status);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos?.map(todo => (\n          <TodoTask\n            todo={todo}\n            handleToggleModal={handleToggleModal}\n            selectedTodo={selectedTodo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  userId: number,\n  todo: Todo | null\n  onHide: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  todo,\n  onHide,\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState({} as User);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUser)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onHide}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { FilterParams, TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n\n  const [filterParam, setFilterParam] = useState({\n    selectFilter: 'all',\n    query: '',\n  });\n\n  const [userId, setUserId] = useState(0);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>({} as Todo);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isModalActive, setIsModalActive] = useState(false);\n\n  useEffect(() => {\n    getTodos().then(setTodos).finally(() => setIsLoading(false));\n  }, []);\n\n  const changeFilterParam = (event: ChangeEvent<HTMLSelectElement>) => {\n    setFilterParam((prev) => ({ ...prev, selectFilter: event.target.value }));\n  };\n\n  const filterTodos = () => {\n    if (filterParam.selectFilter === FilterParams.All) {\n      getTodos().then(todo => {\n        setTodos(todo.filter(({ title }) => title.toLowerCase().includes(filterParam.query.toLowerCase())));\n      });\n    }\n\n    if (filterParam.selectFilter === FilterParams.Active) {\n      getTodos().then(todo => {\n        setTodos(todo.filter(({ completed, title }) => {\n          return !completed\n            && title.toLowerCase().includes(filterParam.query.toLowerCase());\n        }));\n      });\n    }\n\n    if (filterParam.selectFilter === FilterParams.Completed) {\n      getTodos().then(todo => {\n        setTodos(todo.filter(({ completed, title }) => {\n          return completed\n            && title.toLowerCase().includes(filterParam.query.toLowerCase());\n        }));\n      });\n    }\n  };\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterParam((prev) => ({ ...prev, query: event.target.value }));\n  };\n\n  const resetQuery = () => {\n    setFilterParam((prev) => ({ ...prev, query: '' }));\n  };\n\n  const selectUser = (id: number) => {\n    setUserId(id);\n  };\n\n  const selectTodo = (todoId: number) => {\n    setSelectedTodo(todos?.find(({ id }) => id === todoId) || null);\n  };\n\n  const hideModal = () => {\n    setSelectedTodo(null);\n    setUserId(0);\n    setIsModalActive(false);\n  };\n\n  useEffect(() => {\n    filterTodos();\n  }, [filterParam]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterParam={filterParam}\n                onFilterChange={changeFilterParam}\n                onSearch={handleSearch}\n                onReset={resetQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={todos}\n                  selectedTodo={selectedTodo}\n                  selectTodo={selectTodo}\n                  selectUser={selectUser}\n                  setModal={setIsModalActive}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {isModalActive && (\n        <TodoModal\n          todo={selectedTodo}\n          userId={userId}\n          onHide={hideModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}